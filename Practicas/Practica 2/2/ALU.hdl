// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
   IN
      x[16], y[16],  // 16-bit inputs
      zx, // zero the x input?
      nx, // negate the x input?
      zy, // zero the y input?
      ny, // negate the y input?
      f,  // compute out = x + y (if 1) or x & y (if 0)
      no; // negate the out output?

   OUT
      out[16], // 16-bit output
      zr, // 1 if (out == 0), 0 otherwise
      ng; // 1 if (out < 0),  0 otherwise

   PARTS:
      Mux16(a=x, b=false, sel=zx, out=muxX);
      Not16(in=muxX, out=nomuxX);
      Mux16(a=muxX, b=nomuxX, sel=nx, out=x2);

      Mux16(a=y, b=false, sel=zy, out=muxY);
      Not16(in=muxY, out=nomuxY);
      Mux16(a=muxY, b=nomuxY, sel=ny, out=y2);

      Add16(a=x2, b=y2, out=x2PLUSy2);
      And16(a=x2, b=y2, out=x2ANDy2);
      Mux16(a=x2ANDy2, b=x2PLUSy2, sel=f, out=out0);

      Not16(in=out0, out=nout0);
      Mux16(a=out0, b=nout0, sel=no, out=out, out[15]=sign, out[0..7]=out0to7, out[8..15]=out8to15);

      Or8Way(in=out0to7, out=zr1);
      Or8Way(in=out8to15, out=zr2);
      Or(a=zr1, b=zr2, out=nozr);
      Not(in=nozr, out=zr);

      And(a=sign, b=true, out=ng);
    }

    /*
    * REFERENCES:
    * Journey To Master Programmer. (2017, 21 julio).
    * Nand2Tetris StudyAlong - Hack ALU Design [Vídeo].
    * YouTube. https://www.youtube.com/watch?v=3bgMUGdGcBU
    *
    * onthelearn. (2023, 15 julio).
    * How to make an ALU (Arithmetic Logic Unit) from logic gates and mux | nand2tetris project 02 [Vídeo].
    * YouTube. https://www.youtube.com/watch?v=Vtcm1oSSI0o
    */
